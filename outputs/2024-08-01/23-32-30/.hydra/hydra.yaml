hydra:
  run:
    dir: outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: RUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra.mode=RUN
    task:
    - +exp=spec2vec
    - ++exp.runner.device=cuda
    - ++exp.runner.multi_gpu=True
    - ++exp.runner.num_workers=64
    - +data=masked_spec
    - +model=masked_tf_model_large
    - +data.data=/path/to/data
    - ++data.val_split=0.01
    - +task=fixed_mask_pretrain.yaml
    - +criterion=pretrain_masked_criterion
    - +preprocessor=stft
    - ++data.test_split=0.01
    - ++task.freq_mask_p=0.05
    - ++task.time_mask_p=0.05
    - ++exp.runner.total_steps=500000
  job:
    name: run_tests
    chdir: null
    override_dirname: ++data.test_split=0.01,++data.val_split=0.01,++exp.runner.device=cuda,++exp.runner.multi_gpu=True,++exp.runner.num_workers=64,++exp.runner.total_steps=500000,++task.freq_mask_p=0.05,++task.time_mask_p=0.05,+criterion=pretrain_masked_criterion,+data.data=/path/to/data,+data=masked_spec,+exp=spec2vec,+model=masked_tf_model_large,+preprocessor=stft,+task=fixed_mask_pretrain.yaml
    id: ???
    num: ???
    config_name: null
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.2
    version_base: '1.1'
    cwd: /Users/yeroc/Desktop/BrainBERT
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /Users/yeroc/Desktop/BrainBERT/conf
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    output_dir: /Users/yeroc/Desktop/BrainBERT/outputs/2024-08-01/23-32-30
    choices:
      preprocessor: stft
      criterion: pretrain_masked_criterion
      task: fixed_mask_pretrain.yaml
      model: masked_tf_model_large
      data: masked_spec
      exp: spec2vec
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
